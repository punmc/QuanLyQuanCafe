/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import dao.ChiTietHoaDonDAO;
import dao.HoaDonDAO;
import dao.KhachHangDAO;
import dao.NhanVienDAO;
import dao.SanPhamDAO;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;

import java.util.ArrayList;
import java.util.Vector;
import javax.swing.ButtonGroup;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.table.DefaultTableModel;
import pojo.ChiTietHoaDon;

import pojo.HoaDon;
import pojo.KhachHang;
import pojo.NhanVien;
import pojo.SanPham;

/**
 *
 * @author PC
 */
public class QL_HoaDon extends javax.swing.JFrame {

    DefaultTableModel dtm1 = new DefaultTableModel();
    DefaultTableModel dtm2 = new DefaultTableModel();
    ArrayList<HoaDon> lstHoaDon = new ArrayList<>();
    boolean check = true;
    public QL_HoaDon() {
        initComponents();
        display();
        // Load dữ liệu bảng hóa đơn
        dtm1 = (DefaultTableModel)tblDsHoaDon.getModel();
        loadTableInfo();
        // Load và điều chỉnh các combobox
        ButtonGroup group = new ButtonGroup();
        group.add(radioMaHD);
        group.add(radioMaKH);
        group.add(radioNhanVien);
        group.add(radioNgayThang);
        loadComboBox();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnTimKiem = new javax.swing.JPanel();
        lbTitle = new javax.swing.JLabel();
        lbMaHD = new javax.swing.JLabel();
        cboMaHD = new javax.swing.JComboBox<>();
        lbNhanVien = new javax.swing.JLabel();
        cboNhanVien = new javax.swing.JComboBox<>();
        lbMaKH = new javax.swing.JLabel();
        cboMaKH = new javax.swing.JComboBox<>();
        txtNgayXuat = new javax.swing.JTextField();
        lbIconSearch = new javax.swing.JLabel();
        btnTimKiem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        radioMaHD = new javax.swing.JRadioButton();
        radioNhanVien = new javax.swing.JRadioButton();
        radioMaKH = new javax.swing.JRadioButton();
        radioNgayThang = new javax.swing.JRadioButton();
        pnDSHoaDon = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDsHoaDon = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDsSanPham = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnTimKiem.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lbTitle.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbTitle.setText("Thông tin tìm kiếm");

        lbMaHD.setText("Mã hóa đơn");

        cboMaHD.setToolTipText("");
        cboMaHD.setEnabled(false);

        lbNhanVien.setText("Nhân viên");

        cboNhanVien.setToolTipText("");
        cboNhanVien.setEnabled(false);

        lbMaKH.setText("Mã khách hàng");

        cboMaKH.setToolTipText("");
        cboMaKH.setEnabled(false);

        txtNgayXuat.setText("yyyy-mm-dd");
        txtNgayXuat.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNgayXuatFocusGained(evt);
            }
        });

        lbIconSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Search-icon.png"))); // NOI18N

        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        radioMaHD.setText("Theo Mã hóa đơn");
        radioMaHD.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioMaHDItemStateChanged(evt);
            }
        });

        radioNhanVien.setText("Theo Nhân viên");
        radioNhanVien.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioNhanVienItemStateChanged(evt);
            }
        });

        radioMaKH.setText("Theo Mã khách hàng");
        radioMaKH.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioMaKHItemStateChanged(evt);
            }
        });

        radioNgayThang.setText("Theo ngày tháng năm");

        javax.swing.GroupLayout pnTimKiemLayout = new javax.swing.GroupLayout(pnTimKiem);
        pnTimKiem.setLayout(pnTimKiemLayout);
        pnTimKiemLayout.setHorizontalGroup(
            pnTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTimKiemLayout.createSequentialGroup()
                .addGroup(pnTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnTimKiemLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lbTitle))
                    .addGroup(pnTimKiemLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(pnTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnTimKiemLayout.createSequentialGroup()
                                .addComponent(lbMaKH)
                                .addGap(12, 12, 12)
                                .addComponent(cboMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnTimKiemLayout.createSequentialGroup()
                                .addGroup(pnTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lbNhanVien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lbMaHD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(pnTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cboMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cboNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(60, 60, 60)
                        .addGroup(pnTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radioMaKH)
                            .addGroup(pnTimKiemLayout.createSequentialGroup()
                                .addGroup(pnTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(radioNhanVien)
                                    .addComponent(radioMaHD))
                                .addGap(44, 44, 44)
                                .addGroup(pnTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(pnTimKiemLayout.createSequentialGroup()
                                        .addComponent(radioNgayThang)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtNgayXuat, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pnTimKiemLayout.createSequentialGroup()
                                        .addComponent(lbIconSearch)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnTimKiem)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnTimKiemLayout.setVerticalGroup(
            pnTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnTimKiemLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbTitle)
                .addGap(18, 18, 18)
                .addGroup(pnTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnTimKiemLayout.createSequentialGroup()
                        .addComponent(radioMaHD)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addGroup(pnTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbNhanVien)
                            .addComponent(cboNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(radioNhanVien))
                        .addGap(21, 21, 21))
                    .addGroup(pnTimKiemLayout.createSequentialGroup()
                        .addGroup(pnTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnTimKiemLayout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(pnTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cboMaHD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lbMaHD)))
                            .addGroup(pnTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(radioNgayThang)
                                .addComponent(txtNgayXuat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(43, 43, 43)
                        .addGroup(pnTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnTimKiem)
                                .addComponent(btnXoa))
                            .addComponent(lbIconSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(pnTimKiemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbMaKH)
                    .addComponent(cboMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(radioMaKH))
                .addGap(17, 17, 17))
        );

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        tblDsHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã hóa đơn", "Mã bàn", "Mã khách hàng", "Ngày xuất", "Chiết khấu", "Tổng tiền", "Mã nhân viên"
            }
        ));
        tblDsHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDsHoaDonMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblDsHoaDon);

        javax.swing.GroupLayout pnDSHoaDonLayout = new javax.swing.GroupLayout(pnDSHoaDon);
        pnDSHoaDon.setLayout(pnDSHoaDonLayout);
        pnDSHoaDonLayout.setHorizontalGroup(
            pnDSHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        pnDSHoaDonLayout.setVerticalGroup(
            pnDSHoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnDSHoaDonLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 10, Short.MAX_VALUE))
        );

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        tblDsSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã hóa đơn", "Tên sản phẩm", "Số lượng", "Đơn giá"
            }
        ));
        jScrollPane2.setViewportView(tblDsSanPham);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Danh sách sản phẩm của hóa đơn");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Danh sách hóa đơn");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnDSHoaDon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(pnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(pnDSHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblDsHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDsHoaDonMouseClicked
        // TODO add your handling code here:
        int row = tblDsHoaDon.getSelectedRow();
        loadTableDetail(tblDsHoaDon.getValueAt(row, 0).toString());
    }//GEN-LAST:event_tblDsHoaDonMouseClicked

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // TODO add your handling code here:
        ArrayList<HoaDon> lsthd = new ArrayList<HoaDon>();
        if(radioMaHD.isSelected()){
            lsthd.add(HoaDonDAO.timKiemHoaDon_theoMaHD(cboMaHD.getSelectedItem().toString()));
        }
        else if(radioMaKH.isSelected()){
            lsthd = HoaDonDAO.timKiemDsHoaDon_theoMaKH(cboMaKH.getSelectedItem().toString());
        }
        else if(radioNhanVien.isSelected()){
            lsthd = HoaDonDAO.timKiemDsHoaDon_theoMaNV(cboNhanVien.getSelectedItem().toString());
        }
        else if(radioNgayThang.isSelected()){
            lsthd = HoaDonDAO.timKiemDsHoaDon_theoNgayThangNam(txtNgayXuat.getText());
      
        }
        else
            JOptionPane.showMessageDialog(btnTimKiem, "Bạn hãy chọn loại tìm kiếm", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
        
        if(lsthd.isEmpty() == false)
            loadTableInfo_timKiem(lsthd);
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void radioMaHDItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radioMaHDItemStateChanged
        // TODO add your handling code here:
        enableComboBox(cboMaHD);
    }//GEN-LAST:event_radioMaHDItemStateChanged

    private void radioNhanVienItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radioNhanVienItemStateChanged
        // TODO add your handling code here:
        enableComboBox(cboNhanVien);
    }//GEN-LAST:event_radioNhanVienItemStateChanged

    private void radioMaKHItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radioMaKHItemStateChanged
        // TODO add your handling code here:
        enableComboBox(cboMaKH);
    }//GEN-LAST:event_radioMaKHItemStateChanged

    private void txtNgayXuatFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNgayXuatFocusGained
        // TODO add your handling code here:
        txtNgayXuat.setText("");
    }//GEN-LAST:event_txtNgayXuatFocusGained

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        if(tblDsHoaDon.getValueAt(tblDsHoaDon.getSelectedRow(), 5).toString().equals("0.0000")){
            boolean kq = HoaDonDAO.XoaHD(tblDsHoaDon.getValueAt(tblDsHoaDon.getSelectedRow(), 0).toString());
            if(kq){
                JOptionPane.showMessageDialog(null, "Xóa thành công");
                loadTableInfo();
            }
            else
                JOptionPane.showMessageDialog(null, "Xóa thất bại");
        }
        else{
            JOptionPane.showMessageDialog(null, "Không thể xóa hóa đơn đã nhập sản phẩm");
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QL_HoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QL_HoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QL_HoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QL_HoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QL_HoaDon().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cboMaHD;
    private javax.swing.JComboBox<String> cboMaKH;
    private javax.swing.JComboBox<String> cboNhanVien;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbIconSearch;
    private javax.swing.JLabel lbMaHD;
    private javax.swing.JLabel lbMaKH;
    private javax.swing.JLabel lbNhanVien;
    private javax.swing.JLabel lbTitle;
    private javax.swing.JPanel pnDSHoaDon;
    private javax.swing.JPanel pnTimKiem;
    private javax.swing.JRadioButton radioMaHD;
    private javax.swing.JRadioButton radioMaKH;
    private javax.swing.JRadioButton radioNgayThang;
    private javax.swing.JRadioButton radioNhanVien;
    private javax.swing.JTable tblDsHoaDon;
    private javax.swing.JTable tblDsSanPham;
    private javax.swing.JTextField txtNgayXuat;
    // End of variables declaration//GEN-END:variables

    private void display() {
        this.setSize(803, 580);
        this.setTitle("Quản lý hóa đơn");
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.setLocationRelativeTo(null);
    }

    private void loadTableInfo() {
        lstHoaDon = HoaDonDAO.layDsHoaDon();
        dtm1.setRowCount(0);
        for(HoaDon hd : lstHoaDon){
            Vector<Object> dong = new Vector<>();
            dong.add(hd.getMaHD());
            dong.add(hd.getMaBan());
            dong.add(hd.getMaKH());
            dong.add(hd.getNgayXuat());
            dong.add(hd.getMucGiamGia());
            dong.add(hd.getTongThanhTien());
            dong.add(hd.getMaNV());
            
            dtm1.addRow(dong);
        }
    }
    
    private void loadTableInfo_timKiem(ArrayList<HoaDon> lst) {
        dtm1.setRowCount(0);
        for(HoaDon hd : lst){
            Vector<Object> dong = new Vector<>();
            dong.add(hd.getMaHD());
            dong.add(hd.getMaBan());
            dong.add(hd.getMaKH());
            dong.add(hd.getNgayXuat());
            dong.add(hd.getMucGiamGia());
            dong.add(hd.getTongThanhTien());
            dong.add(hd.getMaNV());
            
            dtm1.addRow(dong);
        }
    }

    private void loadTableDetail(String maHD) {
        // Load dữ liệu bảng chi tiết hóa đơn
        dtm2 = (DefaultTableModel)tblDsSanPham.getModel();
        ArrayList<ChiTietHoaDon> lstChiTiet = new ArrayList<>();
        lstChiTiet = ChiTietHoaDonDAO.layDsChiTietHD(maHD);
        dtm2.setRowCount(0);
        for(ChiTietHoaDon ct : lstChiTiet){
            Vector<Object> dong = new Vector<>();
            SanPham sp = new SanPham();
            sp = SanPhamDAO.lay1SanPham(ct.getMaHang());
            dong.add(ct.getMaHD());
            dong.add(sp.getTenHang());
            dong.add(ct.getSoLuong());
            dong.add(ct.getDonGia());
            
            dtm2.addRow(dong);
        }
    }

    private void loadComboBox() {
        ArrayList<NhanVien> lstNhanVien = new ArrayList<NhanVien>();
        lstNhanVien = NhanVienDAO.layDSNhanVien();
        ArrayList<KhachHang> lstKhachHang = new ArrayList<>();
        lstKhachHang = KhachHangDAO.layDSKhachHang();
        
        for(HoaDon hd : lstHoaDon){
            cboMaHD.addItem(hd.getMaHD());
        }
        
        for(NhanVien nv : lstNhanVien){
            cboNhanVien.addItem(nv.getMaNV());
        }
        
        for(KhachHang kh : lstKhachHang){
            cboMaKH.addItem(kh.getMaKH());
        }
        
    }
    
    private void enableComboBox(JComboBox<String> cbo){
        if(check == true){
            cbo.setEnabled(true);
            check = false;
        }
        else{
            cbo.setEnabled(false);
            check = true;
        }
    }
}
